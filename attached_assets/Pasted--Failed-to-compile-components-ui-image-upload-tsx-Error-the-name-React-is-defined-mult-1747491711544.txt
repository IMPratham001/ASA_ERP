
Failed to compile
./components/ui/image-upload.tsx
Error: 
  × the name `React` is defined multiple times
    ╭─[/home/runner/workspace/components/ui/image-upload.tsx:1:1]
  1 │ 
  2 │ "use client";
  3 │ 
  4 │ import React from 'react';
    ·        ──┬──
    ·          ╰── previous definition of `React` here
  5 │ import { useDropzone } from 'react-dropzone';
  6 │ import { cn } from '@/lib/utils/cn';
  7 │ import { Upload } from 'lucide-react';
  8 │ 
  9 │ interface ImageUploadProps {
 10 │   value: string[];
 11 │   onChange: (value: string[]) => void;
 12 │   onUpload?: (files: File[]) => void;
 13 │ }
 14 │ 
 15 │ export function ImageUpload({ value, onChange, onUpload }: ImageUploadProps) {
 16 │   const { getRootProps, getInputProps, isDragActive } = useDropzone({
 17 │     accept: {
 18 │       'image/*': ['.png', '.jpg', '.jpeg', '.gif']
 19 │     },
 20 │     onDrop: (acceptedFiles) => {
 21 │       if (onUpload) {
 22 │         onUpload(acceptedFiles);
 23 │       }
 24 │       const newImages = acceptedFiles.map(file => URL.createObjectURL(file));
 25 │       onChange([...value, ...newImages]);
 26 │     }
 27 │   });
 28 │ 
 29 │   return (
 30 │     <div className="space-y-4">
 31 │       <div
 32 │         {...getRootProps()}
 33 │         className={cn(
 34 │           "border-2 border-dashed rounded-lg p-8 text-center cursor-pointer",
 35 │           isDragActive && "border-primary bg-secondary/50"
 36 │         )}
 37 │       >
 38 │         <input {...getInputProps()} />
 39 │         <Upload className="mx-auto h-12 w-12 text-muted-foreground" />
 40 │         <p className="mt-2 text-sm text-muted-foreground">
 41 │           Drag & drop images here, or click to select files
 42 │         </p>
 43 │       </div>
 44 │       {value.length > 0 && (
 45 │         <div className="grid grid-cols-3 gap-4">
 46 │           {value.map((image, index) => (
 47 │             <img
 48 │               key={index}
 49 │               src={image}
 50 │               alt={`Uploaded ${index + 1}`}
 51 │               className="rounded-lg object-cover w-full aspect-square"
 52 │             />
 53 │           ))}
 54 │         </div>
 55 │       )}
 56 │     </div>
 57 │   );
 58 │ }
 59 │ "use client";
 60 │ 
 61 │ import React from 'react';
    ·        ──┬──
    ·          ╰── `React` redefined here
 62 │ import { useDropzone } from 'react-dropzone';
 63 │ import { cn } from '@/lib/utils';
 64 │ import { Upload } from 'lucide-react';
    ╰────

  × the name `useDropzone` is defined multiple times
    ╭─[/home/runner/workspace/components/ui/image-upload.tsx:2:1]
  2 │ "use client";
  3 │ 
  4 │ import React from 'react';
  5 │ import { useDropzone } from 'react-dropzone';
    ·          ─────┬─────
    ·               ╰── previous definition of `useDropzone` here
  6 │ import { cn } from '@/lib/utils/cn';
  7 │ import { Upload } from 'lucide-react';
  8 │ 
  9 │ interface ImageUploadProps {
 10 │   value: string[];
 11 │   onChange: (value: string[]) => void;
 12 │   onUpload?: (files: File[]) => void;
 13 │ }
 14 │ 
 15 │ export function ImageUpload({ value, onChange, onUpload }: ImageUploadProps) {
 16 │   const { getRootProps, getInputProps, isDragActive } = useDropzone({
 17 │     accept: {
 18 │       'image/*': ['.png', '.jpg', '.jpeg', '.gif']
 19 │     },
 20 │     onDrop: (acceptedFiles) => {
 21 │       if (onUpload) {
 22 │         onUpload(acceptedFiles);
 23 │       }
 24 │       const newImages = acceptedFiles.map(file => URL.createObjectURL(file));
 25 │       onChange([...value, ...newImages]);
 26 │     }
 27 │   });
 28 │ 
 29 │   return (
 30 │     <div className="space-y-4">
 31 │       <div
 32 │         {...getRootProps()}
 33 │         className={cn(
 34 │           "border-2 border-dashed rounded-lg p-8 text-center cursor-pointer",
 35 │           isDragActive && "border-primary bg-secondary/50"
 36 │         )}
 37 │       >
 38 │         <input {...getInputProps()} />
 39 │         <Upload className="mx-auto h-12 w-12 text-muted-foreground" />
 40 │         <p className="mt-2 text-sm text-muted-foreground">
 41 │           Drag & drop images here, or click to select files
 42 │         </p>
 43 │       </div>
 44 │       {value.length > 0 && (
 45 │         <div className="grid grid-cols-3 gap-4">
 46 │           {value.map((image, index) => (
 47 │             <img
 48 │               key={index}
 49 │               src={image}
 50 │               alt={`Uploaded ${index + 1}`}
 51 │               className="rounded-lg object-cover w-full aspect-square"
 52 │             />
 53 │           ))}
 54 │         </div>
 55 │       )}
 56 │     </div>
 57 │   );
 58 │ }
 59 │ "use client";
 60 │ 
 61 │ import React from 'react';
 62 │ import { useDropzone } from 'react-dropzone';
    ·          ─────┬─────
    ·               ╰── `useDropzone` redefined here
 63 │ import { cn } from '@/lib/utils';
 64 │ import { Upload } from 'lucide-react';
    ╰────

  × the name `cn` is defined multiple times
    ╭─[/home/runner/workspace/components/ui/image-upload.tsx:3:1]
  3 │ 
  4 │ import React from 'react';
  5 │ import { useDropzone } from 'react-dropzone';
  6 │ import { cn } from '@/lib/utils/cn';
    ·          ─┬
    ·           ╰── previous definition of `cn` here
  7 │ import { Upload } from 'lucide-react';
  8 │ 
  9 │ interface ImageUploadProps {
 10 │   value: string[];
 11 │   onChange: (value: string[]) => void;
 12 │   onUpload?: (files: File[]) => void;
 13 │ }
 14 │ 
 15 │ export function ImageUpload({ value, onChange, onUpload }: ImageUploadProps) {
 16 │   const { getRootProps, getInputProps, isDragActive } = useDropzone({
 17 │     accept: {
 18 │       'image/*': ['.png', '.jpg', '.jpeg', '.gif']
 19 │     },
 20 │     onDrop: (acceptedFiles) => {
 21 │       if (onUpload) {
 22 │         onUpload(acceptedFiles);
 23 │       }
 24 │       const newImages = acceptedFiles.map(file => URL.createObjectURL(file));
 25 │       onChange([...value, ...newImages]);
 26 │     }
 27 │   });
 28 │ 
 29 │   return (
 30 │     <div className="space-y-4">
 31 │       <div
 32 │         {...getRootProps()}
 33 │         className={cn(
 34 │           "border-2 border-dashed rounded-lg p-8 text-center cursor-pointer",
 35 │           isDragActive && "border-primary bg-secondary/50"
 36 │         )}
 37 │       >
 38 │         <input {...getInputProps()} />
 39 │         <Upload className="mx-auto h-12 w-12 text-muted-foreground" />
 40 │         <p className="mt-2 text-sm text-muted-foreground">
 41 │           Drag & drop images here, or click to select files
 42 │         </p>
 43 │       </div>
 44 │       {value.length > 0 && (
 45 │         <div className="grid grid-cols-3 gap-4">
 46 │           {value.map((image, index) => (
 47 │             <img
 48 │               key={index}
 49 │               src={image}
 50 │               alt={`Uploaded ${index + 1}`}
 51 │               className="rounded-lg object-cover w-full aspect-square"
 52 │             />
 53 │           ))}
 54 │         </div>
 55 │       )}
 56 │     </div>
 57 │   );
 58 │ }
 59 │ "use client";
 60 │ 
 61 │ import React from 'react';
 62 │ import { useDropzone } from 'react-dropzone';
 63 │ import { cn } from '@/lib/utils';
    ·          ─┬
    ·           ╰── `cn` redefined here
 64 │ import { Upload } from 'lucide-react';
 65 │ 
 66 │ interface ImageUploadProps {
    ╰────

  × the name `Upload` is defined multiple times
    ╭─[/home/runner/workspace/components/ui/image-upload.tsx:4:1]
  4 │ import React from 'react';
  5 │ import { useDropzone } from 'react-dropzone';
  6 │ import { cn } from '@/lib/utils/cn';
  7 │ import { Upload } from 'lucide-react';
    ·          ───┬──
    ·             ╰── previous definition of `Upload` here
  8 │ 
  9 │ interface ImageUploadProps {
 10 │   value: string[];
 11 │   onChange: (value: string[]) => void;
 12 │   onUpload?: (files: File[]) => void;
 13 │ }
 14 │ 
 15 │ export function ImageUpload({ value, onChange, onUpload }: ImageUploadProps) {
 16 │   const { getRootProps, getInputProps, isDragActive } = useDropzone({
 17 │     accept: {
 18 │       'image/*': ['.png', '.jpg', '.jpeg', '.gif']
 19 │     },
 20 │     onDrop: (acceptedFiles) => {
 21 │       if (onUpload) {
 22 │         onUpload(acceptedFiles);
 23 │       }
 24 │       const newImages = acceptedFiles.map(file => URL.createObjectURL(file));
 25 │       onChange([...value, ...newImages]);
 26 │     }
 27 │   });
 28 │ 
 29 │   return (
 30 │     <div className="space-y-4">
 31 │       <div
 32 │         {...getRootProps()}
 33 │         className={cn(
 34 │           "border-2 border-dashed rounded-lg p-8 text-center cursor-pointer",
 35 │           isDragActive && "border-primary bg-secondary/50"
 36 │         )}
 37 │       >
 38 │         <input {...getInputProps()} />
 39 │         <Upload className="mx-auto h-12 w-12 text-muted-foreground" />
 40 │         <p className="mt-2 text-sm text-muted-foreground">
 41 │           Drag & drop images here, or click to select files
 42 │         </p>
 43 │       </div>
 44 │       {value.length > 0 && (
 45 │         <div className="grid grid-cols-3 gap-4">
 46 │           {value.map((image, index) => (
 47 │             <img
 48 │               key={index}
 49 │               src={image}
 50 │               alt={`Uploaded ${index + 1}`}
 51 │               className="rounded-lg object-cover w-full aspect-square"
 52 │             />
 53 │           ))}
 54 │         </div>
 55 │       )}
 56 │     </div>
 57 │   );
 58 │ }
 59 │ "use client";
 60 │ 
 61 │ import React from 'react';
 62 │ import { useDropzone } from 'react-dropzone';
 63 │ import { cn } from '@/lib/utils';
 64 │ import { Upload } from 'lucide-react';
    ·          ───┬──
    ·             ╰── `Upload` redefined here
 65 │ 
 66 │ interface ImageUploadProps {
 67 │   onUpload: (files: File[]) => void;
    ╰────

  × the name `ImageUpload` is defined multiple times
    ╭─[/home/runner/workspace/components/ui/image-upload.tsx:12:1]
 12 │   onUpload?: (files: File[]) => void;
 13 │ }
 14 │ 
 15 │ export function ImageUpload({ value, onChange, onUpload }: ImageUploadProps) {
    ·                 ─────┬─────
    ·                      ╰── previous definition of `ImageUpload` here
 16 │   const { getRootProps, getInputProps, isDragActive } = useDropzone({
 17 │     accept: {
 18 │       'image/*': ['.png', '.jpg', '.jpeg', '.gif']
 19 │     },
 20 │     onDrop: (acceptedFiles) => {
 21 │       if (onUpload) {
 22 │         onUpload(acceptedFiles);
 23 │       }
 24 │       const newImages = acceptedFiles.map(file => URL.createObjectURL(file));
 25 │       onChange([...value, ...newImages]);
 26 │     }
 27 │   });
 28 │ 
 29 │   return (
 30 │     <div className="space-y-4">
 31 │       <div
 32 │         {...getRootProps()}
 33 │         className={cn(
 34 │           "border-2 border-dashed rounded-lg p-8 text-center cursor-pointer",
 35 │           isDragActive && "border-primary bg-secondary/50"
 36 │         )}
 37 │       >
 38 │         <input {...getInputProps()} />
 39 │         <Upload className="mx-auto h-12 w-12 text-muted-foreground" />
 40 │         <p className="mt-2 text-sm text-muted-foreground">
 41 │           Drag & drop images here, or click to select files
 42 │         </p>
 43 │       </div>
 44 │       {value.length > 0 && (
 45 │         <div className="grid grid-cols-3 gap-4">
 46 │           {value.map((image, index) => (
 47 │             <img
 48 │               key={index}
 49 │               src={image}
 50 │               alt={`Uploaded ${index + 1}`}
 51 │               className="rounded-lg object-cover w-full aspect-square"
 52 │             />
 53 │           ))}
 54 │         </div>
 55 │       )}
 56 │     </div>
 57 │   );
 58 │ }
 59 │ "use client";
 60 │ 
 61 │ import React from 'react';
 62 │ import { useDropzone } from 'react-dropzone';
 63 │ import { cn } from '@/lib/utils';
 64 │ import { Upload } from 'lucide-react';
 65 │ 
 66 │ interface ImageUploadProps {
 67 │   onUpload: (files: File[]) => void;
 68 │   className?: string;
 69 │ }
 70 │ 
 71 │ export function ImageUpload({ onUpload, className }: ImageUploadProps) {
    ·                 ─────┬─────
    ·                      ╰── `ImageUpload` redefined here
 72 │   const { getRootProps, getInputProps, isDragActive } = useDropzone({
 73 │     accept: {
 74 │       'image/*': ['.png', '.jpg', '.jpeg', '.gif']
    ╰────

  × The "use client" directive must be placed before other expressions. Move it to the top of the file to resolve this issue.
    ╭─[/home/runner/workspace/components/ui/image-upload.tsx:56:1]
 56 │     </div>
 57 │   );
 58 │ }
 59 │ "use client";
    · ─────────────
 60 │ 
 61 │ import React from 'react';
 62 │ import { useDropzone } from 'react-dropzone';
    ╰────
This error occurred during the build process and can only be dismissed by fixing the error.